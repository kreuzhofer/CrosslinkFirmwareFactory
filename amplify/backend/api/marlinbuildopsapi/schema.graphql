type BuildDefinition @model 
  @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String!
  sourceTree: String!
  configTree: String!
  printerManufacturer: String
  printerModel: String
  printerMainboard: String
  platformioEnv: String
  description: String
  configurationJSON: String
  owner: String
  buildJobs: [BuildJob!] @connection(keyName: "byBuildDefinition", fields: ["id"])
}

type BuildJob @model 
  @auth(rules: [{ allow: owner }]) 
  @key(name: "byBuildDefinition", fields: ["buildDefinitionID", "id"])
{
  id: ID!
  buildDefinitionID: ID!
  jobState: BuildJobState!
  startTime: String
  endTime: String
  message: String
  log: String
  buildJobArtifacts: [BuildJobArtifact!] @connection(keyName: "byBuildJob", fields: ["id"])
}

type BuildJobArtifact @model
  @auth(rules: [{allow: owner}])
  @key(name: "byBuildJob", fields: ["buildJobID", "id"])
{
  id: ID!
  buildJobID: ID!
  artifactName: String!
  artifactUrl: String!
}

enum BuildJobState {
  QUEUED
  STARTING
  RUNNING
  DONE
  FAILED
}
